{"id":7,"name":"Criar ofertas p/ balanceamento","useGroups":false,"group":"","importUrl":"","params":{"group":"0","reserveMerchants":"0","maxDistance":"5"},"nextStepId":2,"steps":[{"id":1,"gotoUrl":"{gameUrl}?village={id}&screen=market&mode=mass_create_offers&group={group}","script":"\nconst resources = {\n    wood: 0,\n    stone: 0,\n    iron: 0,\n};\n\n\nfunction delay(time, random = 0) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, time + parseInt(Math.random() * random));\n    });\n}\n\n\nnew Promise(async (resolve) => {\n    const table = document.getElementById(\"offer_creation_villages\");\n\n    for (let i = 1; i < table.rows.length; i++) {\n        await delay(200, 300)\n        const merchants =\n            parseInt(table.rows[i].cells[3].innerText.split(\"/\")[0]) -\n            IDLE.reserveMerchants;\n\n        if (merchants > 0) {\n            const resourcesContainer = table.rows[\n                i\n            ].cells[1].getElementsByClassName(\"nowrap\");\n\n            const woodContainer = resourcesContainer[0].getElementsByTagName(\n                \"span\"\n            );\n            let wood = \"\";\n            for (let y = 0; y < woodContainer.length; y++) {\n                wood = wood + woodContainer[y].innerText.replace(/\\D+/g, \"\");\n            }\n            resources.wood = parseInt(wood);\n\n            const stoneContainer = resourcesContainer[1].getElementsByTagName(\n                \"span\"\n            );\n            let stone = \"\";\n            for (let y = 0; y < stoneContainer.length; y++) {\n                stone = stone + stoneContainer[y].innerText.replace(/\\D+/g, \"\");\n            }\n            resources.stone = parseInt(stone);\n\n            const ironContainer = resourcesContainer[2].getElementsByTagName(\n                \"span\"\n            );\n            let iron = \"\";\n            for (let y = 0; y < ironContainer.length; y++) {\n                iron = iron + ironContainer[y].innerText.replace(/\\D+/g, \"\");\n            }\n            resources.iron = parseInt(iron);\n\n            const totalResources = Object.values(resources).reduce((a, b) => a + b);\n            const average = Math.round(totalResources / 3);\n\n            const arr = Object.values(resources);\n            const min = Math.min(...arr);\n            const max = Math.max(...arr);\n            const excess = Math.floor((max - average) / 1000);\n            const lack = Math.floor((average - min) / 1000);\n            let offers = lack;\n\n            if (excess < lack) {\n                offers = excess;\n            }\n\n            if (offers > merchants) {\n                offers = merchants;\n            }\n\n            const qtyInputs = table.rows[i].cells[4].getElementsByTagName(\"input\");\n            qtyInputs[0].value = 1000;\n            qtyInputs[1].value = 1000;\n\n            const qtySelects = table.rows[i].cells[4].getElementsByTagName(\n                \"select\"\n            );\n            qtySelects[0].value = Object.keys(resources).find(\n                (key) => resources[key] === max\n            );\n            qtySelects[1].value = Object.keys(resources).find(\n                (key) => resources[key] === min\n            );\n\n            const offerInput = table.rows[i].cells[5].getElementsByTagName(\"input\");\n            offerInput[0].value = offers;\n\n            const distanceInput = table.rows[i].cells[6].getElementsByTagName(\n                \"input\"\n            );\n            distanceInput[0].value = IDLE.maxDistance;\n        }\n\n    }\n\n\n    await delay(3000)\n    document.getElementsByClassName(\"btn_offer_create\")[1].click();\n    resolve()\n})\n"}]}
